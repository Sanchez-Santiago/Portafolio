---
const { t } = Astro.props;
const ExperenceCards = (
  t && t.ExperienceCards ? Object.values(t.ExperienceCards) : []
) as any[];
---

<div class="conteiner_experience">
  <h1 class="titulo">{t.Experence}</h1>
  <div class="cardsExp">
    {
      ExperenceCards.map((card: any) => (
        <div class="card" style={`--card-bg: url('${card.imagen}');`}>
          <h2>{card.Empresa}</h2>
          <h3>{card.PuestoRol}</h3>
          <p>{card.Descripcion}</p>
          <h3>{card.Fecha}</h3>
        </div>
      ))
    }
  </div>
</div>
<style>
  .conteiner_experience {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    margin: 0;
    max-width: 1200px;
    height: 100%;
    width: 100%;
  }

  .titulo {
    font-family: "Teko", sans-serif;
    font-size: 3rem;
    font-weight: 600;
    margin-bottom: -5rem;
    text-align: center;
  }

  .cardsExp {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    gap: 1rem;
    width: 100%;
    height: 100%;
    padding: 1rem;
    margin: 2rem;
    overflow-x: auto;
    overflow-y: hidden; /* Oculta el scroll vertical */
    padding: 4rem;
    scroll-behavior: smooth;
  }

  /* Estilos para el scroll horizontal */
  .cardsExp::-webkit-scrollbar {
    height: 8px;
  }
  .cardsExp::-webkit-scrollbar-thumb {
    background: #aaa;
    border-radius: 4px;
  }
  .cardsExp::-webkit-scrollbar-track {
    background: #eee;
  }
  .card {
    position: relative;
    overflow: hidden;
    flex: 0 0 auto;
    border-radius: 8px;
    padding: 1.5rem;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
    text-align: center;
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
    min-width: 250px;
    width: 400px;
    background-color: rgba(17, 66, 7, 0.3);
    z-index: 1;
  }

  /* Imagen de fondo con blur inicial bajo y transici√≥n */
  .card::before {
    content: "";
    position: absolute;
    inset: 0;
    background: var(--card-bg) center/cover no-repeat;
    filter: blur(2px); /* Blur bajo inicialmente */
    transform: scale(1.1);
    z-index: -2;
    transition: filter 0.3s ease;
  }

  /* Overlay de color para resaltar (opcional) */
  .card::after {
    content: "";
    position: absolute;
    inset: 0;
    background: rgba(31, 116, 14, 0.3);
    z-index: -1;
    transition: background 0.3s ease;
  }

  /* Estado hover: aumentar el blur */
  .card:hover::before {
    filter: blur(10px);
  }

  /* H2 se muestra siempre */
  .card h2 {
    font-family: "Teko", sans-serif;
    font-size: 3.5rem;
    color: rgb(82, 161, 7);
    margin-top: 0;
    margin-bottom: 0.5rem;
    text-shadow:
      -1px -1px 0 #fdfdfd,
      1px -1px 0 #ffffff,
      -1px 1px 0 #ffffff,
      1px 1px 0 #ffffff;
  }

  /* Inicialmente ocultar h3 y p */
  .card h3,
  .card p {
    opacity: 0;
    transition: opacity 0.3s ease;
    color: white;
  }

  /* En hover, mostrar h3 y p */
  .card:hover h3 {
    opacity: 1;
    font-family: "Teko", sans-serif;
    font-size: 2rem;
  }
  .card:hover p {
    opacity: 1;
    font-family: "Teko", sans-serif;
    font-size: 1.5rem;
  }

  /* Efecto hover en la tarjeta (escala y sombra) */
  .card:hover {
    transform: translateY(-5px) scale(1.2);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }
</style>
