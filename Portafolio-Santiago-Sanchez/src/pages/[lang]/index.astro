---
// src/pages/[lang]/index.astro

import SobreMi from "../../components/componetsGrids/SobreMi.astro";
import Layout from "../../layouts/Layout3.astro";
import LanguageSwitcher from "../../components/LanguageSwitcher";
import translations from "../../locales/translations.json";
import Skil from "../../components/componetsGrids/Skil.astro";
import Contact from "../../components/componetsGrids/Contact.astro";
import DogGrid from "../../components/componetsGrids/DogGrid.astro";
import ClokGrid from "../../components/componetsGrids/ClockGrid.astro";
import CardsGrid from "../../components/componetsGrids/CardsGrid.astro";
import ShootingStar from "../../components/componetsGrids/ShootingStar.astro";
import ContactMe from "../../components/componetsGrids/ContactMe.astro";
import StarAnimation from "../../components/StarAnimation.astro";

// 1. Definir tipo para las traducciones
type Translations = typeof translations;

// 2. Definir rutas estáticas
export async function getStaticPaths() {
  return [{ params: { lang: "es" } }, { params: { lang: "en" } }];
}

// 3. Validación segura de idioma
const { lang } = Astro.params;
const isValidLang = (lang: string): lang is keyof Translations => {
  return Object.keys(translations).includes(lang);
};
const currentLang = isValidLang(lang) ? lang : "en";

// 4. Acceso seguro a las traducciones
const t = translations[currentLang];
---

<Layout title="Home_Portafolio">
  <div class="grid">
    <div class="grid-item item-1">
      <SobreMi t={t} />
    </div>
    <div class="grid-item item-14">
      <Skil />
    </div>
    <div class="grid-item item-15">
      <ClokGrid />
    </div>
    <div class="grid-item item-16">
      <DogGrid />
    </div>
    <div class="grid-item item-18">
      <CardsGrid t={t} />
    </div>
    <div class="grid-item item-22">
      <ShootingStar />
    </div>
    <div class="grid-item item-23">
      <Contact t={t} />
    </div>
    <div class="grid-item item-30">30</div>
    <div class="grid-item item-31">31</div>
    <div class="grid-item item-32">
      <ContactMe t={t} />
    </div>
  </div>

  <!-- Botón de cambio de idioma fijo en la esquina inferior derecha -->
  <div class="language-switcher">
    <LanguageSwitcher currentLang={currentLang} />
  </div>
</Layout>

<style>
  /* Estilos globales */
  body {
    margin: 0;
    padding: 0;
    background-color: #000; /* Fondo negro */
    color: #fff; /* Texto en blanco */
    font-family: Arial, sans-serif;
  }
  .language-switcher {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 1000;
    /* Puedes agregar más estilos, por ejemplo, un fondo y padding */
    background-color: rgba(19, 158, 163, 0.671);
    padding: 10px;
    border-radius: 5px;
    transition:
      transform 0.2s ease-in-out,
      background-color 0.3s;
  }

  /* Contenedor de la cuadrícula */
  /* Contenedor de la cuadrícula - versión mejorada */
  .grid {
    display: grid;
    grid-template-columns: repeat(11, 1fr);
    grid-template-rows: repeat(
      12,
      minmax(100px, auto)
    ); /* Define un número fijo de filas */
    gap: 15px;
    padding: 1rem;
    max-width: 1200px;
    margin: 0 auto;
    /* Elimina max-height para permitir que el contenedor crezca según sea necesario */
    /* Elimina grid-auto-flow: dense para un control más preciso */
  }

  /* Estilos comunes para los elementos de la cuadrícula - sin cambios */
  .grid-item {
    min-height: 80px;
    min-width: 100px;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 15px;
    /*  border: solid 1px rgb(195, 197, 192);*/
    padding: 1rem;
    color: #fff;
    backdrop-filter: blur(5px);
    transition:
      transform 0.2s ease-in-out,
      background-color 0.3s;
    overflow: auto; /* Permite scroll si el contenido es demasiado grande */
  }

  /* Define posiciones específicas y explícitas para cada elemento */
  .item-1 {
    grid-column: 1 / span 5;
    grid-row: 1 / span 3;
    background-color: #26bb124d;
  }

  .item-14 {
    grid-column: 6 / span 4;
    grid-row: 1 / span 3;
    background-color: #0c46087c;
  }

  .item-15 {
    grid-column: 10 / span 2;
    grid-row: 1 / span 2;
    background-color: #028b394f;
  }

  .item-16 {
    display: flex;
    justify-content: center;
    align-items: center;
    grid-column: 10 / span 2;
    grid-row: 3 / span 1;
    background-color: #09460483;
  }

  .item-18 {
    grid-column: 1 / span 10;
    grid-row: 4 / span 4;
    background-color: #287e1d79;
  }

  .item-22 {
    pading: 0;
    flex: auto;
    align-items: center;
    justify-items: center;
    grid-column: 11 / span 1;
    grid-row: 4 / span 4;
    background-color: #094f0754;
  }

  .item-23 {
    grid-column: 1 / span 5;
    grid-row: 8 / span 1;
    background-color: #003f0079;
  }

  .item-30 {
    grid-column: 6 / span 6;
    grid-row: 8 / span 2;
    background-color: #33920d6e;
  }

  .item-31 {
    grid-column: 1 / span 5;
    grid-row: 9 / span 4;
    background-color: #36c73173;
  }

  .item-32 {
    grid-column: 6 / span 6;
    grid-row: 10 / span 3;
    background-color: #287e1d57;
  }

  /* Media Queries más específicos y controlados */
  @media (max-width: 1024px) {
    .grid {
      grid-template-columns: repeat(8, 1fr);
      grid-template-rows: repeat(16, minmax(100px, auto));
    }

    .item-1 {
      grid-column: 1 / span 4;
      grid-row: 1 / span 3;
    }

    .item-14 {
      grid-column: 5 / span 4;
      grid-row: 1 / span 3;
    }

    .item-15 {
      grid-column: 1 / span 2;
      grid-row: 4 / span 2;
    }

    .item-16 {
      grid-column: 3 / span 6;
      grid-row: 4 / span 1;
    }

    .item-18 {
      grid-column: 1 / span 7;
      grid-row: 6 / span 4;
    }

    .item-22 {
      grid-column: 8 / span 1;
      grid-row: 6 / span 4;
    }

    .item-23 {
      grid-column: 1 / span 4;
      grid-row: 10 / span 1;
    }

    .item-30 {
      grid-column: 5 / span 4;
      grid-row: 10 / span 2;
    }

    .item-31 {
      grid-column: 1 / span 4;
      grid-row: 11 / span 4;
    }

    .item-32 {
      grid-column: 5 / span 4;
      grid-row: 12 / span 3;
    }
  }

  @media (max-width: 768px) {
    .grid {
      grid-template-columns: repeat(4, 1fr);
      grid-template-rows: repeat(24, minmax(100px, auto));
    }

    .item-1 {
      grid-column: 1 / span 4;
      grid-row: 1 / span 3;
    }

    .item-14 {
      grid-column: 1 / span 4;
      grid-row: 4 / span 3;
    }

    .item-15 {
      grid-column: 1 / span 2;
      grid-row: 7 / span 2;
    }

    .item-16 {
      grid-column: 3 / span 2;
      grid-row: 7 / span 2;
    }

    .item-18 {
      grid-column: 1 / span 4;
      grid-row: 9 / span 4;
    }

    .item-22 {
      grid-column: 1 / span 4;
      grid-row: 13 / span 1;
    }

    .item-23 {
      grid-column: 1 / span 4;
      grid-row: 14 / span 1;
    }

    .item-30 {
      grid-column: 1 / span 4;
      grid-row: 15 / span 2;
    }

    .item-31 {
      grid-column: 1 / span 4;
      grid-row: 17 / span 3;
    }

    .item-32 {
      grid-column: 1 / span 4;
      grid-row: 20 / span 3;
    }
  }
</style>
